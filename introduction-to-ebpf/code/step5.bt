#!/usr/bin/bpftrace

/**
 Send every apps stdout bpftrace captures to another host

 This script makes a poor log daemon, and it is not fit to use in production.
 The main issue comes from bpf putting all string on stack. The strings and
 the functions share the stack. The later has a limit of 512 bytes per function.
 Hence, a string has a maximum limit of ~220 bytes. By default, strings has a
 limit of 64 bytes and BPFTRACE_STRLEN env var augments that limit. There is an
 ongoing discussion to put the string on the heap and remove the string limit.
 */

BEGIN { @me = pid }

tracepoint:syscalls:sys_enter_write 
/ pid != @me && comm != "sshd" && comm != "bash" && comm != "nc" / 
{
  printf("{\"app\": \"%s\" \"message\": \"%s\"}\n", comm, str(args->buf, args->count));
}

END { clear(@me) }

/** TERMINAL 1
# nc -l localhost 1234
Attaching 3 probes...
{"app": "python3" "message": "hello from python #1"}
{"app": "python3" "message": "hello from python #2"}
{"app": "python3" "message": "hello from python #3"}
*/

/** TERMINAL 2
# bpftrace step5.bt | nc localhost 1234
*/

/** TERMINAL 3
# python3 -c 'print("hello from python #1")'
hello from python #1
# python3 -c 'print("hello from python #2")'
hello from python #2
# python3 -c 'print("hello from python #3")'
hello from python #3
*/
